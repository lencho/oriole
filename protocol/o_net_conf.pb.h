// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: o_net_conf.proto

#ifndef PROTOBUF_o_5fnet_5fconf_2eproto__INCLUDED
#define PROTOBUF_o_5fnet_5fconf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "o_net_ctrl.pb.h"
// @@protoc_insertion_point(includes)

namespace oo {
namespace conf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_o_5fnet_5fconf_2eproto();
void protobuf_AssignDesc_o_5fnet_5fconf_2eproto();
void protobuf_ShutdownFile_o_5fnet_5fconf_2eproto();

class local_node_conf;

// ===================================================================

class local_node_conf : public ::google::protobuf::Message {
 public:
  local_node_conf();
  virtual ~local_node_conf();
  
  local_node_conf(const local_node_conf& from);
  
  inline local_node_conf& operator=(const local_node_conf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const local_node_conf& default_instance();
  
  void Swap(local_node_conf* other);
  
  // implements Message ----------------------------------------------
  
  local_node_conf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const local_node_conf& from);
  void MergeFrom(const local_node_conf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .oo.proto.node_info local = 1;
  inline bool has_local() const;
  inline void clear_local();
  static const int kLocalFieldNumber = 1;
  inline const ::oo::proto::node_info& local() const;
  inline ::oo::proto::node_info* mutable_local();
  
  // repeated .oo.proto.node_info others = 2;
  inline int others_size() const;
  inline void clear_others();
  static const int kOthersFieldNumber = 2;
  inline const ::oo::proto::node_info& others(int index) const;
  inline ::oo::proto::node_info* mutable_others(int index);
  inline ::oo::proto::node_info* add_others();
  inline const ::google::protobuf::RepeatedPtrField< ::oo::proto::node_info >&
      others() const;
  inline ::google::protobuf::RepeatedPtrField< ::oo::proto::node_info >*
      mutable_others();
  
  // @@protoc_insertion_point(class_scope:oo.conf.local_node_conf)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::oo::proto::node_info* local_;
  ::google::protobuf::RepeatedPtrField< ::oo::proto::node_info > others_;
  friend void  protobuf_AddDesc_o_5fnet_5fconf_2eproto();
  friend void protobuf_AssignDesc_o_5fnet_5fconf_2eproto();
  friend void protobuf_ShutdownFile_o_5fnet_5fconf_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static local_node_conf* default_instance_;
};
// ===================================================================


// ===================================================================

// local_node_conf

// required .oo.proto.node_info local = 1;
inline bool local_node_conf::has_local() const {
  return _has_bit(0);
}
inline void local_node_conf::clear_local() {
  if (local_ != NULL) local_->::oo::proto::node_info::Clear();
  _clear_bit(0);
}
inline const ::oo::proto::node_info& local_node_conf::local() const {
  return local_ != NULL ? *local_ : *default_instance_->local_;
}
inline ::oo::proto::node_info* local_node_conf::mutable_local() {
  _set_bit(0);
  if (local_ == NULL) local_ = new ::oo::proto::node_info;
  return local_;
}

// repeated .oo.proto.node_info others = 2;
inline int local_node_conf::others_size() const {
  return others_.size();
}
inline void local_node_conf::clear_others() {
  others_.Clear();
}
inline const ::oo::proto::node_info& local_node_conf::others(int index) const {
  return others_.Get(index);
}
inline ::oo::proto::node_info* local_node_conf::mutable_others(int index) {
  return others_.Mutable(index);
}
inline ::oo::proto::node_info* local_node_conf::add_others() {
  return others_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::oo::proto::node_info >&
local_node_conf::others() const {
  return others_;
}
inline ::google::protobuf::RepeatedPtrField< ::oo::proto::node_info >*
local_node_conf::mutable_others() {
  return &others_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace conf
}  // namespace oo

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_o_5fnet_5fconf_2eproto__INCLUDED
