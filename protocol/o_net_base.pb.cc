// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "o_net_base.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace oo {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* proxy_pkg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  proxy_pkg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_o_5fnet_5fbase_2eproto() {
  protobuf_AddDesc_o_5fnet_5fbase_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "o_net_base.proto");
  GOOGLE_CHECK(file != NULL);
  proxy_pkg_descriptor_ = file->message_type(0);
  static const int proxy_pkg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proxy_pkg, from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proxy_pkg, to_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proxy_pkg, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proxy_pkg, pkg_body_),
  };
  proxy_pkg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      proxy_pkg_descriptor_,
      proxy_pkg::default_instance_,
      proxy_pkg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proxy_pkg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(proxy_pkg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(proxy_pkg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_o_5fnet_5fbase_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    proxy_pkg_descriptor_, &proxy_pkg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_o_5fnet_5fbase_2eproto() {
  delete proxy_pkg::default_instance_;
  delete proxy_pkg_reflection_;
}

void protobuf_AddDesc_o_5fnet_5fbase_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020o_net_base.proto\022\010oo.proto\"I\n\tproxy_pk"
    "g\022\014\n\004from\030\001 \002(\t\022\n\n\002to\030\002 \002(\t\022\020\n\010pkg_type\030"
    "\003 \002(\t\022\020\n\010pkg_body\030\004 \002(\tB\014\n\010oo.protoH\001", 117);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "o_net_base.proto", &protobuf_RegisterTypes);
  proxy_pkg::default_instance_ = new proxy_pkg();
  proxy_pkg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_o_5fnet_5fbase_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_o_5fnet_5fbase_2eproto {
  StaticDescriptorInitializer_o_5fnet_5fbase_2eproto() {
    protobuf_AddDesc_o_5fnet_5fbase_2eproto();
  }
} static_descriptor_initializer_o_5fnet_5fbase_2eproto_;


// ===================================================================

const ::std::string proxy_pkg::_default_from_;
const ::std::string proxy_pkg::_default_to_;
const ::std::string proxy_pkg::_default_pkg_type_;
const ::std::string proxy_pkg::_default_pkg_body_;
#ifndef _MSC_VER
const int proxy_pkg::kFromFieldNumber;
const int proxy_pkg::kToFieldNumber;
const int proxy_pkg::kPkgTypeFieldNumber;
const int proxy_pkg::kPkgBodyFieldNumber;
#endif  // !_MSC_VER

proxy_pkg::proxy_pkg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void proxy_pkg::InitAsDefaultInstance() {
}

proxy_pkg::proxy_pkg(const proxy_pkg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void proxy_pkg::SharedCtor() {
  _cached_size_ = 0;
  from_ = const_cast< ::std::string*>(&_default_from_);
  to_ = const_cast< ::std::string*>(&_default_to_);
  pkg_type_ = const_cast< ::std::string*>(&_default_pkg_type_);
  pkg_body_ = const_cast< ::std::string*>(&_default_pkg_body_);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

proxy_pkg::~proxy_pkg() {
  SharedDtor();
}

void proxy_pkg::SharedDtor() {
  if (from_ != &_default_from_) {
    delete from_;
  }
  if (to_ != &_default_to_) {
    delete to_;
  }
  if (pkg_type_ != &_default_pkg_type_) {
    delete pkg_type_;
  }
  if (pkg_body_ != &_default_pkg_body_) {
    delete pkg_body_;
  }
  if (this != default_instance_) {
  }
}

void proxy_pkg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* proxy_pkg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return proxy_pkg_descriptor_;
}

const proxy_pkg& proxy_pkg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_o_5fnet_5fbase_2eproto();  return *default_instance_;
}

proxy_pkg* proxy_pkg::default_instance_ = NULL;

proxy_pkg* proxy_pkg::New() const {
  return new proxy_pkg;
}

void proxy_pkg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (from_ != &_default_from_) {
        from_->clear();
      }
    }
    if (_has_bit(1)) {
      if (to_ != &_default_to_) {
        to_->clear();
      }
    }
    if (_has_bit(2)) {
      if (pkg_type_ != &_default_pkg_type_) {
        pkg_type_->clear();
      }
    }
    if (_has_bit(3)) {
      if (pkg_body_ != &_default_pkg_body_) {
        pkg_body_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool proxy_pkg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string from = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->from().data(), this->from().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_to;
        break;
      }
      
      // required string to = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_to:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->to().data(), this->to().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_pkg_type;
        break;
      }
      
      // required string pkg_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pkg_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pkg_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->pkg_type().data(), this->pkg_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_pkg_body;
        break;
      }
      
      // required string pkg_body = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pkg_body:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pkg_body()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->pkg_body().data(), this->pkg_body().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void proxy_pkg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string from = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->from().data(), this->from().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->from(), output);
  }
  
  // required string to = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->to().data(), this->to().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->to(), output);
  }
  
  // required string pkg_type = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pkg_type().data(), this->pkg_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->pkg_type(), output);
  }
  
  // required string pkg_body = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pkg_body().data(), this->pkg_body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->pkg_body(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* proxy_pkg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string from = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->from().data(), this->from().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from(), target);
  }
  
  // required string to = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->to().data(), this->to().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to(), target);
  }
  
  // required string pkg_type = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pkg_type().data(), this->pkg_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pkg_type(), target);
  }
  
  // required string pkg_body = 4;
  if (_has_bit(3)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pkg_body().data(), this->pkg_body().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->pkg_body(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int proxy_pkg::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string from = 1;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->from());
    }
    
    // required string to = 2;
    if (has_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->to());
    }
    
    // required string pkg_type = 3;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pkg_type());
    }
    
    // required string pkg_body = 4;
    if (has_pkg_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pkg_body());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void proxy_pkg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const proxy_pkg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const proxy_pkg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void proxy_pkg::MergeFrom(const proxy_pkg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_from(from.from());
    }
    if (from._has_bit(1)) {
      set_to(from.to());
    }
    if (from._has_bit(2)) {
      set_pkg_type(from.pkg_type());
    }
    if (from._has_bit(3)) {
      set_pkg_body(from.pkg_body());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void proxy_pkg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void proxy_pkg::CopyFrom(const proxy_pkg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool proxy_pkg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  return true;
}

void proxy_pkg::Swap(proxy_pkg* other) {
  if (other != this) {
    std::swap(from_, other->from_);
    std::swap(to_, other->to_);
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(pkg_body_, other->pkg_body_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata proxy_pkg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = proxy_pkg_descriptor_;
  metadata.reflection = proxy_pkg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace oo

// @@protoc_insertion_point(global_scope)
